@using OrderService.Models
@model Product

@{
    ViewBag.Title = "AddProduct";
    decimal? price = Model.Price != 0 ? (decimal?)Model.Price : null;
}

<script language="javascript">
    function cancelAdd() {
        window.location.href = `/Delivery/GetDeliveriesList`;
    }
</script>

<h2 id="add-product-header">AddProduct</h2>

@using (Html.BeginForm("AddProductPost", "Product"))
{
<fieldset>
    @Html.ValidationSummary( true )

    @Html.HiddenFor( m => m.Id )

    <div class="form-group">
        @Html.LabelFor( m => m.Name )
        @Html.TextBoxFor( m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor( m => m.Name )
    </div>

    <div class="form-group">
        @Html.LabelFor( m => m.Description )
        @Html.TextBoxFor( m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor( m => m.Description )
    </div>

    <div class="form-group">
        @Html.LabelFor( m => m.Price )
        <input type="number" id="Price" name="Price" min="0" step="0.01" value="@price" class="form-control" />
        @Html.ValidationMessageFor( m => m.Price )
    </div>

    <input id="add-product" type="submit" value="Add" class="btn btn-success" />
    <input id="cancel-add-product" type="button" value="Cancel" onclick="cancelAdd()" class="btn btn-default" />
</fieldset>
}
