@using OrderService.Models
@model Product

@{
    ViewBag.Title = "UpdateProduct";
    decimal? price = Model.Price != 0 ? (decimal?)Model.Price : null;
}

<script language="javascript">
    function cancelEdit() {
        window.location.href=`/Product/GetProductList`;
    }
</script>

<h2 id="update-product-header">Update Product</h2>

@using (Html.BeginForm("UpdateProductPost", "Product"))
{
    <fieldset>
        @Html.ValidationSummary(true)

        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Description)
            @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Price)
            <input type="number" id="Price" name="Price" min="0" step="0.01" value="@price" class="form-control" />
            @Html.ValidationMessageFor(m => m.Price)
        </div>

        <input id="update-product" type="submit" value="Update" class="btn btn-success" />
        <input id="cancel-update-product" type="button" value="Cancel" onclick="cancelEdit()" class="btn btn-default" />
    </fieldset>
}
